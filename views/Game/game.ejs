<%- include('../partials/header') %>

<!-- Navbar con margen superior -->
<div class="menu-container">
  <%- include('../partials/navbar_public') %>
</div>

<!-- Archivos de estilo de Unity -->
<link rel="shortcut icon" href="TemplateData/favicon.ico">
<link rel="stylesheet" href="TemplateData/style.css">

<!-- Contenedor principal del juego Unity -->
<div id="unity-container" class="unity-desktop" style="margin-top: 30px;">
  <canvas id="unity-canvas" width=854 height=480 tabindex="-1"></canvas> 

  <div id="unity-loading-bar">
    <div id="unity-logo"></div>
    <div id="unity-progress-bar-empty">
      <div id="unity-progress-bar-full"></div>
    </div>
  </div>

  <div id="unity-warning"></div>

  <div id="unity-footer">
    <div id="unity-logo-title-footer"></div>
    <div id="unity-fullscreen-button"></div>
    <div id="unity-build-title">Crypto Horizon</div>
  </div>
</div>

<script>
  var canvas = document.querySelector("#unity-canvas");

  // Shows a temporary message banner/ribbon for a few seconds, or
  // a permanent error message on top of the canvas if type=='error'.
  // If type=='warning', a yellow highlight color is used.
  function unityShowBanner(msg, type) {
    var warningBanner = document.querySelector("#unity-warning");
    function updateBannerVisibility() {
      warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
    }
    var div = document.createElement('div');
    div.innerHTML = msg;
    warningBanner.appendChild(div);
    if (type == 'error') div.style = 'background: red; padding: 10px;';
    else {
      if (type == 'warning') div.style = 'background: yellow; padding: 10px;';
      setTimeout(function() {
        warningBanner.removeChild(div);
        updateBannerVisibility();
      }, 5000);
    }
    updateBannerVisibility();
  }

  var buildUrl = "Build";
  var loaderUrl = buildUrl + "/webbuilds.loader.js";
  var config = {
    arguments: [],
    dataUrl: buildUrl + "/webbuilds.data",
    frameworkUrl: buildUrl + "/webbuilds.framework.js",
    codeUrl: buildUrl + "/webbuilds.wasm",
    streamingAssetsUrl: "StreamingAssets",
    companyName: "CryptoChicks",
    productName: "Crypto Horizon",
    productVersion: "1.0",
    showBanner: unityShowBanner,
  };

  // By default, Unity keeps WebGL canvas render target size matched with
  // the DOM size of the canvas element (scaled by window.devicePixelRatio)
  // Set this to false if you want to decouple this synchronization from
  // happening inside the engine, and you would instead like to size up
  // the canvas DOM size and WebGL render target sizes yourself.
  // config.matchWebGLToCanvasSize = false;

  // If you would like all file writes inside Unity Application.persistentDataPath
  // directory to automatically persist so that the contents are remembered when
  // the user revisits the site the next time, uncomment the following line:
  // config.autoSyncPersistentDataPath = true;

  if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
    // Mobile device style: fill the whole browser client area with the game canvas:
    var meta = document.createElement('meta');
    meta.name = 'viewport';
    meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
    document.getElementsByTagName('head')[0].appendChild(meta);
    document.querySelector("#unity-container").className = "unity-mobile";
    canvas.className = "unity-mobile";

    // To lower canvas resolution on mobile devices to gain some performance, uncomment the following line:
    // config.devicePixelRatio = 1;

  } else {
    // Desktop style: Render the game canvas in a window that can be maximized to fullscreen:
    canvas.style.width = "854px";
    canvas.style.height = "480px";
  }

  document.querySelector("#unity-loading-bar").style.display = "block";

  var script = document.createElement("script");
  script.src = loaderUrl;
  script.onload = () => {
    createUnityInstance(canvas, config, (progress) => {
      document.querySelector("#unity-progress-bar-full").style.width = 100 * progress + "%";
    }).then((unityInstance) => {
      document.querySelector("#unity-loading-bar").style.display = "none";
      document.querySelector("#unity-fullscreen-button").onclick = () => {
        unityInstance.SetFullscreen(1);
      };
    }).catch((message) => {
      alert(message);
    });
  };

  document.body.appendChild(script);
</script>

<p class="text-center mt-3">Are you an admin? <a href="/login">Login</a></p>

<%- include('../partials/footer') %>
